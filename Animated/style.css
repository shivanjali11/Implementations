*{
    margin:0;
    padding:0;
    font-family: sans-serif;

}
.hero{
    width:100%;
    height:100vh;
    background: url("background.png");
    background-size:cover;
    background-position: center;
    position: relative;
    overflow: hidden;
}
.logo{
    width:100px;
    cursor: pointer;
}
.navbar{
    width:85%;
    height:15%;
    margin:auto;
    display: flex;
    align-items: center;
    justify-content: space-between;
}
button{
    color:#fbfcfd;
    padding:10px 25px;
    background: transparent;
    border:1px solid #fff;
    border-radius: 20px;
    outline: none;
    cursor: pointer;
}
.content{
    color:#fbfcfd;
    position: absolute;
    top:50%;
    left:8%;
    transform: translateY(-50%);
    /* transform property is  used to apply a 2D or 3D transformation to an element */
    /* translateY() function is used to move an element vertically along the Y-axis. */
    /* The translateY() function takes a value as its parameter, which specifies the amount of vertical translation to apply. For example, translateY(50px) would move the element 50 pixels down along the Y-axis.

In the case of translateY(-50%), the element is being translated up along the Y-axis by 50% of its own height. The negative value specifies that the translation should be in the opposite direction to the positive Y-axis, which is typically downward. By using a percentage value instead of a pixel value, the translation will be relative to the size of the element, which can be useful for responsive design.

The translateY(-50%) is often used in conjunction with the top property to vertically center an element within its parent container. */
    z-index:2;

}
h1{
    font-size: 80px;
    margin:10px 0 30px;
    line-height: 80px;;
}
.side-bar{
    width:50px;
    height:100vh;
    background: linear-gradient(#00545d,#000729);
    position: absolute;
    right:0;
    top: 0;

}
.menu{
    display: block;
    width:25px;
    margin:40px auto 0;
    cursor: pointer;
}
.social-links img , .useful-links img{
    width:25px;
    margin:5px auto;
    cursor:pointer;
}
.social-links{
    width:50px;
    text-align: center;
    position: absolute;
    top:50%;
    transform: translateY(-50%);
}
.useful-links{
    width:50px;
    text-align: center;
    position: absolute;
    bottom:30px;

}
.bubbles img{
    width: 50px;
    /* to make the bubbles in smaller size */
    animation: bubble 7s linear infinite ;
}
.bubbles{
    width: 100%;
    display:flex;
    align-items: center;
    justify-content: space-between;
     position: absolute;
     bottom:-70px;
}
@keyframes bubble{
    0%{
        transform: translateY(0);
        opacity: 0;
    }
    50%{
        opacity: 1;;

    }
    75%{
        opacity: 1;
    }
    100%{
        transform: translateY(-80vh);
        opacity: 0;
    }
}

.bubbles img:nth-child(1)
{ animation-delay: 1s;
    width:15px;
}.bubbles img:nth-child(2)
{ animation-delay: 3.9s;
    
}.bubbles img:nth-child(3)
{ animation-delay: 2.4s;
    width: 30px;
}.bubbles img:nth-child(4)
{ animation-delay: 1.3s;
    
}.bubbles img:nth-child(5)
{ animation-delay: 4.6s;
    width: 35px;
}.bubbles img:nth-child(6)
{ animation-delay: 2.2s;
    
}.bubbles img:nth-child(7)
{ animation-delay: 0.6s;
    width: 35px;
}
.bubbles img:nth-child(8)
{ animation-delay: 4.6s;
    width: 20px;
}.bubbles img:nth-child(9)
{ animation-delay: 2.2s;
    width:40px;
}.bubbles img:nth-child(10)
{ animation-delay: 0.6s;
    
}